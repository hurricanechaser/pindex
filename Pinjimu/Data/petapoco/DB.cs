
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `DataConnectionString`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=(local);Initial Catalog=Pinjimu;Persist Security Info=True;User ID=sa;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `True`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Pinjimu.Data.POCOS
{
	public partial class DB : Database
	{
		public DB() 
			: base("DataConnectionString")
		{
			CommonConstruct();
		}

		public DB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			DB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static DB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new DB();
        }

		[ThreadStatic] static DB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static DB repo { get { return DB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("User")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class User : DB.Record<User>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Password 
		{ 
			get
			{
				return _Password;
			}
			set
			{
				_Password = value;
				MarkColumnModified("Password");
			}
		}
		string _Password;

	}
    
	[TableName("Stores")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Store : DB.Record<Store>  
    {
        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string RelImagePath 
		{ 
			get
			{
				return _RelImagePath;
			}
			set
			{
				_RelImagePath = value;
				MarkColumnModified("RelImagePath");
			}
		}
		string _RelImagePath;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Url 
		{ 
			get
			{
				return _Url;
			}
			set
			{
				_Url = value;
				MarkColumnModified("Url");
			}
		}
		string _Url;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

	}
    
	[TableName("vw_Pin")]
	[ExplicitColumns]
    public partial class vw_Pin : DB.Record<vw_Pin>  
    {
        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public bool? Uploaded 
		{ 
			get
			{
				return _Uploaded;
			}
			set
			{
				_Uploaded = value;
				MarkColumnModified("Uploaded");
			}
		}
		bool? _Uploaded;

        [Column] 
		public decimal? PinID 
		{ 
			get
			{
				return _PinID;
			}
			set
			{
				_PinID = value;
				MarkColumnModified("PinID");
			}
		}
		decimal? _PinID;

        [Column] 
		public string Image_Title 
		{ 
			get
			{
				return _Image_Title;
			}
			set
			{
				_Image_Title = value;
				MarkColumnModified("Image_Title");
			}
		}
		string _Image_Title;

        [Column] 
		public string Source 
		{ 
			get
			{
				return _Source;
			}
			set
			{
				_Source = value;
				MarkColumnModified("Source");
			}
		}
		string _Source;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

        [Column] 
		public int BIMID 
		{ 
			get
			{
				return _BIMID;
			}
			set
			{
				_BIMID = value;
				MarkColumnModified("BIMID");
			}
		}
		int _BIMID;

        [Column] 
		public string Contacts 
		{ 
			get
			{
				return _Contacts;
			}
			set
			{
				_Contacts = value;
				MarkColumnModified("Contacts");
			}
		}
		string _Contacts;

	}
    
	[TableName("Images")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Image : DB.Record<Image>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public DateTime? Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime? _Date;

        [Column] 
		public bool? Tagged 
		{ 
			get
			{
				return _Tagged;
			}
			set
			{
				_Tagged = value;
				MarkColumnModified("Tagged");
			}
		}
		bool? _Tagged;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public bool? Uploaded 
		{ 
			get
			{
				return _Uploaded;
			}
			set
			{
				_Uploaded = value;
				MarkColumnModified("Uploaded");
			}
		}
		bool? _Uploaded;

        [Column] 
		public bool? Verified 
		{ 
			get
			{
				return _Verified;
			}
			set
			{
				_Verified = value;
				MarkColumnModified("Verified");
			}
		}
		bool? _Verified;

	}
    
	[TableName("sysdiagrams")]
	[PrimaryKey("diagram_id")]
	[ExplicitColumns]
    public partial class sysdiagram : DB.Record<sysdiagram>  
    {
        [Column] 
		public string name 
		{ 
			get
			{
				return _name;
			}
			set
			{
				_name = value;
				MarkColumnModified("name");
			}
		}
		string _name;

        [Column] 
		public int principal_id 
		{ 
			get
			{
				return _principal_id;
			}
			set
			{
				_principal_id = value;
				MarkColumnModified("principal_id");
			}
		}
		int _principal_id;

        [Column] 
		public int diagram_id 
		{ 
			get
			{
				return _diagram_id;
			}
			set
			{
				_diagram_id = value;
				MarkColumnModified("diagram_id");
			}
		}
		int _diagram_id;

        [Column] 
		public int? version 
		{ 
			get
			{
				return _version;
			}
			set
			{
				_version = value;
				MarkColumnModified("version");
			}
		}
		int? _version;

        [Column] 
		public byte[] definition 
		{ 
			get
			{
				return _definition;
			}
			set
			{
				_definition = value;
				MarkColumnModified("definition");
			}
		}
		byte[] _definition;

	}
    
	[TableName("Facebook")]
	[PrimaryKey("id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Facebook : DB.Record<Facebook>  
    {
        [Column] 
		public string first_name 
		{ 
			get
			{
				return _first_name;
			}
			set
			{
				_first_name = value;
				MarkColumnModified("first_name");
			}
		}
		string _first_name;

        [Column] 
		public string gender 
		{ 
			get
			{
				return _gender;
			}
			set
			{
				_gender = value;
				MarkColumnModified("gender");
			}
		}
		string _gender;

        [Column] 
		public decimal id 
		{ 
			get
			{
				return _id;
			}
			set
			{
				_id = value;
				MarkColumnModified("id");
			}
		}
		decimal _id;

        [Column] 
		public string last_name 
		{ 
			get
			{
				return _last_name;
			}
			set
			{
				_last_name = value;
				MarkColumnModified("last_name");
			}
		}
		string _last_name;

        [Column] 
		public string link 
		{ 
			get
			{
				return _link;
			}
			set
			{
				_link = value;
				MarkColumnModified("link");
			}
		}
		string _link;

        [Column] 
		public string locale 
		{ 
			get
			{
				return _locale;
			}
			set
			{
				_locale = value;
				MarkColumnModified("locale");
			}
		}
		string _locale;

        [Column] 
		public string name 
		{ 
			get
			{
				return _name;
			}
			set
			{
				_name = value;
				MarkColumnModified("name");
			}
		}
		string _name;

        [Column] 
		public double? timezone 
		{ 
			get
			{
				return _timezone;
			}
			set
			{
				_timezone = value;
				MarkColumnModified("timezone");
			}
		}
		double? _timezone;

        [Column] 
		public DateTime? updated_time 
		{ 
			get
			{
				return _updated_time;
			}
			set
			{
				_updated_time = value;
				MarkColumnModified("updated_time");
			}
		}
		DateTime? _updated_time;

	}
    
	[TableName("vw_ImagesSNo")]
	[ExplicitColumns]
    public partial class vw_ImagesSNo : DB.Record<vw_ImagesSNo>  
    {
        [Column] 
		public long? SNo 
		{ 
			get
			{
				return _SNo;
			}
			set
			{
				_SNo = value;
				MarkColumnModified("SNo");
			}
		}
		long? _SNo;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public bool? Tagged 
		{ 
			get
			{
				return _Tagged;
			}
			set
			{
				_Tagged = value;
				MarkColumnModified("Tagged");
			}
		}
		bool? _Tagged;

	}
    
	[TableName("UserBatchAssigned")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class UserBatchAssigned : DB.Record<UserBatchAssigned>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public int BatchStart 
		{ 
			get
			{
				return _BatchStart;
			}
			set
			{
				_BatchStart = value;
				MarkColumnModified("BatchStart");
			}
		}
		int _BatchStart;

        [Column] 
		public int BatchEnd 
		{ 
			get
			{
				return _BatchEnd;
			}
			set
			{
				_BatchEnd = value;
				MarkColumnModified("BatchEnd");
			}
		}
		int _BatchEnd;

	}
    
	[TableName("CategoryImagesMapping")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class CategoryImagesMapping : DB.Record<CategoryImagesMapping>  
    {
        [Column] 
		public int CategoryID 
		{ 
			get
			{
				return _CategoryID;
			}
			set
			{
				_CategoryID = value;
				MarkColumnModified("CategoryID");
			}
		}
		int _CategoryID;

        [Column] 
		public int ImageID 
		{ 
			get
			{
				return _ImageID;
			}
			set
			{
				_ImageID = value;
				MarkColumnModified("ImageID");
			}
		}
		int _ImageID;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

	}
    
	[TableName("AppUsers")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class AppUser : DB.Record<AppUser>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Password 
		{ 
			get
			{
				return _Password;
			}
			set
			{
				_Password = value;
				MarkColumnModified("Password");
			}
		}
		string _Password;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string About 
		{ 
			get
			{
				return _About;
			}
			set
			{
				_About = value;
				MarkColumnModified("About");
			}
		}
		string _About;

        [Column] 
		public string Location 
		{ 
			get
			{
				return _Location;
			}
			set
			{
				_Location = value;
				MarkColumnModified("Location");
			}
		}
		string _Location;

        [Column] 
		public string Website 
		{ 
			get
			{
				return _Website;
			}
			set
			{
				_Website = value;
				MarkColumnModified("Website");
			}
		}
		string _Website;

        [Column] 
		public string Invite 
		{ 
			get
			{
				return _Invite;
			}
			set
			{
				_Invite = value;
				MarkColumnModified("Invite");
			}
		}
		string _Invite;

        [Column] 
		public decimal? facebookid 
		{ 
			get
			{
				return _facebookid;
			}
			set
			{
				_facebookid = value;
				MarkColumnModified("facebookid");
			}
		}
		decimal? _facebookid;

        [Column] 
		public int? Points 
		{ 
			get
			{
				return _Points;
			}
			set
			{
				_Points = value;
				MarkColumnModified("Points");
			}
		}
		int? _Points;

        [Column] 
		public DateTime Create_date 
		{ 
			get
			{
				return _Create_date;
			}
			set
			{
				_Create_date = value;
				MarkColumnModified("Create_date");
			}
		}
		DateTime _Create_date;

        [Column] 
		public string Speciality 
		{ 
			get
			{
				return _Speciality;
			}
			set
			{
				_Speciality = value;
				MarkColumnModified("Speciality");
			}
		}
		string _Speciality;

	}
    
	[TableName("vw_ImgCategory")]
	[ExplicitColumns]
    public partial class vw_ImgCategory : DB.Record<vw_ImgCategory>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int CategoryID 
		{ 
			get
			{
				return _CategoryID;
			}
			set
			{
				_CategoryID = value;
				MarkColumnModified("CategoryID");
			}
		}
		int _CategoryID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("vw_Cat")]
	[ExplicitColumns]
    public partial class vw_Cat : DB.Record<vw_Cat>  
    {
        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int CategoryID 
		{ 
			get
			{
				return _CategoryID;
			}
			set
			{
				_CategoryID = value;
				MarkColumnModified("CategoryID");
			}
		}
		int _CategoryID;

	}
    
	[TableName("Review")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Review : DB.Record<Review>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int BIMID 
		{ 
			get
			{
				return _BIMID;
			}
			set
			{
				_BIMID = value;
				MarkColumnModified("BIMID");
			}
		}
		int _BIMID;

        [Column] 
		public string Question 
		{ 
			get
			{
				return _Question;
			}
			set
			{
				_Question = value;
				MarkColumnModified("Question");
			}
		}
		string _Question;

        [Column] 
		public string Answer 
		{ 
			get
			{
				return _Answer;
			}
			set
			{
				_Answer = value;
				MarkColumnModified("Answer");
			}
		}
		string _Answer;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

        [Column] 
		public string SessionID 
		{ 
			get
			{
				return _SessionID;
			}
			set
			{
				_SessionID = value;
				MarkColumnModified("SessionID");
			}
		}
		string _SessionID;

	}
    
	[TableName("BoardContributor")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class BoardContributor : DB.Record<BoardContributor>  
    {
        [Column] 
		public int BoardID 
		{ 
			get
			{
				return _BoardID;
			}
			set
			{
				_BoardID = value;
				MarkColumnModified("BoardID");
			}
		}
		int _BoardID;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int ContributorID 
		{ 
			get
			{
				return _ContributorID;
			}
			set
			{
				_ContributorID = value;
				MarkColumnModified("ContributorID");
			}
		}
		int _ContributorID;

	}
    
	[TableName("BoardsImagesMapping")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class BoardsImagesMapping : DB.Record<BoardsImagesMapping>  
    {
        [Column] 
		public int? BoardID 
		{ 
			get
			{
				return _BoardID;
			}
			set
			{
				_BoardID = value;
				MarkColumnModified("BoardID");
			}
		}
		int? _BoardID;

        [Column] 
		public int ImageID 
		{ 
			get
			{
				return _ImageID;
			}
			set
			{
				_ImageID = value;
				MarkColumnModified("ImageID");
			}
		}
		int _ImageID;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Image_Title 
		{ 
			get
			{
				return _Image_Title;
			}
			set
			{
				_Image_Title = value;
				MarkColumnModified("Image_Title");
			}
		}
		string _Image_Title;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

        [Column] 
		public string Source 
		{ 
			get
			{
				return _Source;
			}
			set
			{
				_Source = value;
				MarkColumnModified("Source");
			}
		}
		string _Source;

        [Column] 
		public int? Rating 
		{ 
			get
			{
				return _Rating;
			}
			set
			{
				_Rating = value;
				MarkColumnModified("Rating");
			}
		}
		int? _Rating;

	}
    
	[TableName("Likes")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Like : DB.Record<Like>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int BoardsImagesMappingID 
		{ 
			get
			{
				return _BoardsImagesMappingID;
			}
			set
			{
				_BoardsImagesMappingID = value;
				MarkColumnModified("BoardsImagesMappingID");
			}
		}
		int _BoardsImagesMappingID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

	}
    
	[TableName("vw_BoardCategory")]
	[ExplicitColumns]
    public partial class vw_BoardCategory : DB.Record<vw_BoardCategory>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int? BoardID 
		{ 
			get
			{
				return _BoardID;
			}
			set
			{
				_BoardID = value;
				MarkColumnModified("BoardID");
			}
		}
		int? _BoardID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Source 
		{ 
			get
			{
				return _Source;
			}
			set
			{
				_Source = value;
				MarkColumnModified("Source");
			}
		}
		string _Source;

	}
    
	[TableName("vw_Images4Tagging")]
	[ExplicitColumns]
    public partial class vw_Images4Tagging : DB.Record<vw_Images4Tagging>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public bool? Tagged 
		{ 
			get
			{
				return _Tagged;
			}
			set
			{
				_Tagged = value;
				MarkColumnModified("Tagged");
			}
		}
		bool? _Tagged;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public int? CategoryID 
		{ 
			get
			{
				return _CategoryID;
			}
			set
			{
				_CategoryID = value;
				MarkColumnModified("CategoryID");
			}
		}
		int? _CategoryID;

        [Column] 
		public string CategoryName 
		{ 
			get
			{
				return _CategoryName;
			}
			set
			{
				_CategoryName = value;
				MarkColumnModified("CategoryName");
			}
		}
		string _CategoryName;

        [Column] 
		public string Image_Title 
		{ 
			get
			{
				return _Image_Title;
			}
			set
			{
				_Image_Title = value;
				MarkColumnModified("Image_Title");
			}
		}
		string _Image_Title;

        [Column] 
		public int? Rating 
		{ 
			get
			{
				return _Rating;
			}
			set
			{
				_Rating = value;
				MarkColumnModified("Rating");
			}
		}
		int? _Rating;

	}
    
	[TableName("vw_UserComments")]
	[ExplicitColumns]
    public partial class vw_UserComment : DB.Record<vw_UserComment>  
    {
        [Column] 
		public string Comment 
		{ 
			get
			{
				return _Comment;
			}
			set
			{
				_Comment = value;
				MarkColumnModified("Comment");
			}
		}
		string _Comment;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public int BoardsImagesMappingID 
		{ 
			get
			{
				return _BoardsImagesMappingID;
			}
			set
			{
				_BoardsImagesMappingID = value;
				MarkColumnModified("BoardsImagesMappingID");
			}
		}
		int _BoardsImagesMappingID;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string Speciality 
		{ 
			get
			{
				return _Speciality;
			}
			set
			{
				_Speciality = value;
				MarkColumnModified("Speciality");
			}
		}
		string _Speciality;

        [Column] 
		public DateTime Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime _Date;

	}
    
	[TableName("Contacts")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Contact : DB.Record<Contact>  
    {
        [Column] 
		public int ImageID 
		{ 
			get
			{
				return _ImageID;
			}
			set
			{
				_ImageID = value;
				MarkColumnModified("ImageID");
			}
		}
		int _ImageID;

        [Column("Contact")] 
		public string _Contact 
		{ 
			get
			{
				return __Contact;
			}
			set
			{
				__Contact = value;
				MarkColumnModified("Contact");
			}
		}
		string __Contact;

        [Column] 
		public string Type 
		{ 
			get
			{
				return _Type;
			}
			set
			{
				_Type = value;
				MarkColumnModified("Type");
			}
		}
		string _Type;

        [Column] 
		public string Address 
		{ 
			get
			{
				return _Address;
			}
			set
			{
				_Address = value;
				MarkColumnModified("Address");
			}
		}
		string _Address;

        [Column] 
		public string Phone 
		{ 
			get
			{
				return _Phone;
			}
			set
			{
				_Phone = value;
				MarkColumnModified("Phone");
			}
		}
		string _Phone;

        [Column] 
		public string Website 
		{ 
			get
			{
				return _Website;
			}
			set
			{
				_Website = value;
				MarkColumnModified("Website");
			}
		}
		string _Website;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public DateTime Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime _Date;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

	}
    
	[TableName("Prize")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Prize : DB.Record<Prize>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Prize_Name 
		{ 
			get
			{
				return _Prize_Name;
			}
			set
			{
				_Prize_Name = value;
				MarkColumnModified("Prize_Name");
			}
		}
		string _Prize_Name;

        [Column] 
		public string User_Alert 
		{ 
			get
			{
				return _User_Alert;
			}
			set
			{
				_User_Alert = value;
				MarkColumnModified("User_Alert");
			}
		}
		string _User_Alert;

	}
    
	[TableName("Roulette")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Roulette : DB.Record<Roulette>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int Start_Angle 
		{ 
			get
			{
				return _Start_Angle;
			}
			set
			{
				_Start_Angle = value;
				MarkColumnModified("Start_Angle");
			}
		}
		int _Start_Angle;

        [Column] 
		public int End_Angle 
		{ 
			get
			{
				return _End_Angle;
			}
			set
			{
				_End_Angle = value;
				MarkColumnModified("End_Angle");
			}
		}
		int _End_Angle;

        [Column] 
		public int PrizeID 
		{ 
			get
			{
				return _PrizeID;
			}
			set
			{
				_PrizeID = value;
				MarkColumnModified("PrizeID");
			}
		}
		int _PrizeID;

	}
    
	[TableName("PrizeHistory")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class PrizeHistory : DB.Record<PrizeHistory>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int PrizeID 
		{ 
			get
			{
				return _PrizeID;
			}
			set
			{
				_PrizeID = value;
				MarkColumnModified("PrizeID");
			}
		}
		int _PrizeID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public DateTime Create_date 
		{ 
			get
			{
				return _Create_date;
			}
			set
			{
				_Create_date = value;
				MarkColumnModified("Create_date");
			}
		}
		DateTime _Create_date;

	}
    
	[TableName("CategoryAdsMapping")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class CategoryAdsMapping : DB.Record<CategoryAdsMapping>  
    {
        [Column] 
		public int CategoryID 
		{ 
			get
			{
				return _CategoryID;
			}
			set
			{
				_CategoryID = value;
				MarkColumnModified("CategoryID");
			}
		}
		int _CategoryID;

        [Column] 
		public int AdID 
		{ 
			get
			{
				return _AdID;
			}
			set
			{
				_AdID = value;
				MarkColumnModified("AdID");
			}
		}
		int _AdID;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

	}
    
	[TableName("Ads")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Ad : DB.Record<Ad>  
    {
        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Url 
		{ 
			get
			{
				return _Url;
			}
			set
			{
				_Url = value;
				MarkColumnModified("Url");
			}
		}
		string _Url;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int? Priority 
		{ 
			get
			{
				return _Priority;
			}
			set
			{
				_Priority = value;
				MarkColumnModified("Priority");
			}
		}
		int? _Priority;

        [Column] 
		public int? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		int? _Image_Height;

        [Column] 
		public int? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		int? _Image_Width;

	}
    
	[TableName("vw_FollowingUser")]
	[ExplicitColumns]
    public partial class vw_FollowingUser : DB.Record<vw_FollowingUser>  
    {
        [Column] 
		public string FullName 
		{ 
			get
			{
				return _FullName;
			}
			set
			{
				_FullName = value;
				MarkColumnModified("FullName");
			}
		}
		string _FullName;

        [Column] 
		public int FollowingID 
		{ 
			get
			{
				return _FollowingID;
			}
			set
			{
				_FollowingID = value;
				MarkColumnModified("FollowingID");
			}
		}
		int _FollowingID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public int Following_Count 
		{ 
			get
			{
				return _Following_Count;
			}
			set
			{
				_Following_Count = value;
				MarkColumnModified("Following_Count");
			}
		}
		int _Following_Count;

        [Column] 
		public int Follower_Count 
		{ 
			get
			{
				return _Follower_Count;
			}
			set
			{
				_Follower_Count = value;
				MarkColumnModified("Follower_Count");
			}
		}
		int _Follower_Count;

        [Column] 
		public bool? Follow_Status 
		{ 
			get
			{
				return _Follow_Status;
			}
			set
			{
				_Follow_Status = value;
				MarkColumnModified("Follow_Status");
			}
		}
		bool? _Follow_Status;

        [Column] 
		public string Pins_XML 
		{ 
			get
			{
				return _Pins_XML;
			}
			set
			{
				_Pins_XML = value;
				MarkColumnModified("Pins_XML");
			}
		}
		string _Pins_XML;

	}
    
	[TableName("FollowingUser")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class FollowingUser : DB.Record<FollowingUser>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public int FollowingID 
		{ 
			get
			{
				return _FollowingID;
			}
			set
			{
				_FollowingID = value;
				MarkColumnModified("FollowingID");
			}
		}
		int _FollowingID;

        [Column] 
		public DateTime Create_Date 
		{ 
			get
			{
				return _Create_Date;
			}
			set
			{
				_Create_Date = value;
				MarkColumnModified("Create_Date");
			}
		}
		DateTime _Create_Date;

	}
    
	[TableName("vw_FollowCount")]
	[ExplicitColumns]
    public partial class vw_FollowCount : DB.Record<vw_FollowCount>  
    {
        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public int Following_Count 
		{ 
			get
			{
				return _Following_Count;
			}
			set
			{
				_Following_Count = value;
				MarkColumnModified("Following_Count");
			}
		}
		int _Following_Count;

        [Column] 
		public int Follower_Count 
		{ 
			get
			{
				return _Follower_Count;
			}
			set
			{
				_Follower_Count = value;
				MarkColumnModified("Follower_Count");
			}
		}
		int _Follower_Count;

	}
    
	[TableName("vw_FollowerUser")]
	[ExplicitColumns]
    public partial class vw_FollowerUser : DB.Record<vw_FollowerUser>  
    {
        [Column] 
		public string FullName 
		{ 
			get
			{
				return _FullName;
			}
			set
			{
				_FullName = value;
				MarkColumnModified("FullName");
			}
		}
		string _FullName;

        [Column] 
		public int FollowerID 
		{ 
			get
			{
				return _FollowerID;
			}
			set
			{
				_FollowerID = value;
				MarkColumnModified("FollowerID");
			}
		}
		int _FollowerID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public int Following_Count 
		{ 
			get
			{
				return _Following_Count;
			}
			set
			{
				_Following_Count = value;
				MarkColumnModified("Following_Count");
			}
		}
		int _Following_Count;

        [Column] 
		public int Follower_Count 
		{ 
			get
			{
				return _Follower_Count;
			}
			set
			{
				_Follower_Count = value;
				MarkColumnModified("Follower_Count");
			}
		}
		int _Follower_Count;

        [Column] 
		public string Pins_XML 
		{ 
			get
			{
				return _Pins_XML;
			}
			set
			{
				_Pins_XML = value;
				MarkColumnModified("Pins_XML");
			}
		}
		string _Pins_XML;

	}
    
	[TableName("Comments")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Comment : DB.Record<Comment>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column("Comment")] 
		public string _Comment 
		{ 
			get
			{
				return __Comment;
			}
			set
			{
				__Comment = value;
				MarkColumnModified("Comment");
			}
		}
		string __Comment;

        [Column] 
		public int BoardsImagesMappingID 
		{ 
			get
			{
				return _BoardsImagesMappingID;
			}
			set
			{
				_BoardsImagesMappingID = value;
				MarkColumnModified("BoardsImagesMappingID");
			}
		}
		int _BoardsImagesMappingID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public DateTime? Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime? _Date;

	}
    
	[TableName("Ratings")]
	[PrimaryKey("ImageID", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Rating : DB.Record<Rating>  
    {
        [Column] 
		public int ImageID 
		{ 
			get
			{
				return _ImageID;
			}
			set
			{
				_ImageID = value;
				MarkColumnModified("ImageID");
			}
		}
		int _ImageID;

        [Column] 
		public int? RePins 
		{ 
			get
			{
				return _RePins;
			}
			set
			{
				_RePins = value;
				MarkColumnModified("RePins");
			}
		}
		int? _RePins;

        [Column] 
		public int? Likes 
		{ 
			get
			{
				return _Likes;
			}
			set
			{
				_Likes = value;
				MarkColumnModified("Likes");
			}
		}
		int? _Likes;

        [Column("Rating")] 
		public int? _Rating 
		{ 
			get
			{
				return __Rating;
			}
			set
			{
				__Rating = value;
				MarkColumnModified("Rating");
			}
		}
		int? __Rating;

	}
    
	[TableName("vw_User")]
	[ExplicitColumns]
    public partial class vw_User : DB.Record<vw_User>  
    {
        [Column] 
		public int Following_Count 
		{ 
			get
			{
				return _Following_Count;
			}
			set
			{
				_Following_Count = value;
				MarkColumnModified("Following_Count");
			}
		}
		int _Following_Count;

        [Column] 
		public int Follower_Count 
		{ 
			get
			{
				return _Follower_Count;
			}
			set
			{
				_Follower_Count = value;
				MarkColumnModified("Follower_Count");
			}
		}
		int _Follower_Count;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

        [Column] 
		public string Avatar 
		{ 
			get
			{
				return _Avatar;
			}
			set
			{
				_Avatar = value;
				MarkColumnModified("Avatar");
			}
		}
		string _Avatar;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string About 
		{ 
			get
			{
				return _About;
			}
			set
			{
				_About = value;
				MarkColumnModified("About");
			}
		}
		string _About;

        [Column] 
		public string Location 
		{ 
			get
			{
				return _Location;
			}
			set
			{
				_Location = value;
				MarkColumnModified("Location");
			}
		}
		string _Location;

        [Column] 
		public string Website 
		{ 
			get
			{
				return _Website;
			}
			set
			{
				_Website = value;
				MarkColumnModified("Website");
			}
		}
		string _Website;

        [Column] 
		public int? Points 
		{ 
			get
			{
				return _Points;
			}
			set
			{
				_Points = value;
				MarkColumnModified("Points");
			}
		}
		int? _Points;

	}
    
	[TableName("vw_Images")]
	[ExplicitColumns]
    public partial class vw_Image : DB.Record<vw_Image>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public bool? Uploaded 
		{ 
			get
			{
				return _Uploaded;
			}
			set
			{
				_Uploaded = value;
				MarkColumnModified("Uploaded");
			}
		}
		bool? _Uploaded;

        [Column] 
		public decimal? PinID 
		{ 
			get
			{
				return _PinID;
			}
			set
			{
				_PinID = value;
				MarkColumnModified("PinID");
			}
		}
		decimal? _PinID;

        [Column] 
		public string Image_Title 
		{ 
			get
			{
				return _Image_Title;
			}
			set
			{
				_Image_Title = value;
				MarkColumnModified("Image_Title");
			}
		}
		string _Image_Title;

        [Column] 
		public string BoardName 
		{ 
			get
			{
				return _BoardName;
			}
			set
			{
				_BoardName = value;
				MarkColumnModified("BoardName");
			}
		}
		string _BoardName;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

        [Column] 
		public int? BoardUserID 
		{ 
			get
			{
				return _BoardUserID;
			}
			set
			{
				_BoardUserID = value;
				MarkColumnModified("BoardUserID");
			}
		}
		int? _BoardUserID;

        [Column] 
		public int BIMID 
		{ 
			get
			{
				return _BIMID;
			}
			set
			{
				_BIMID = value;
				MarkColumnModified("BIMID");
			}
		}
		int _BIMID;

        [Column] 
		public int? BoardID 
		{ 
			get
			{
				return _BoardID;
			}
			set
			{
				_BoardID = value;
				MarkColumnModified("BoardID");
			}
		}
		int? _BoardID;

        [Column] 
		public string Source 
		{ 
			get
			{
				return _Source;
			}
			set
			{
				_Source = value;
				MarkColumnModified("Source");
			}
		}
		string _Source;

        [Column] 
		public int? Rating 
		{ 
			get
			{
				return _Rating;
			}
			set
			{
				_Rating = value;
				MarkColumnModified("Rating");
			}
		}
		int? _Rating;

	}
    
	[TableName("Boards")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Board : DB.Record<Board>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int CatID 
		{ 
			get
			{
				return _CatID;
			}
			set
			{
				_CatID = value;
				MarkColumnModified("CatID");
			}
		}
		int _CatID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

	}
    
	[TableName("vw_ImagesforCategories")]
	[ExplicitColumns]
    public partial class vw_ImagesforCategory : DB.Record<vw_ImagesforCategory>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public string RelativeImage_Path 
		{ 
			get
			{
				return _RelativeImage_Path;
			}
			set
			{
				_RelativeImage_Path = value;
				MarkColumnModified("RelativeImage_Path");
			}
		}
		string _RelativeImage_Path;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public bool? Uploaded 
		{ 
			get
			{
				return _Uploaded;
			}
			set
			{
				_Uploaded = value;
				MarkColumnModified("Uploaded");
			}
		}
		bool? _Uploaded;

        [Column] 
		public decimal? PinID 
		{ 
			get
			{
				return _PinID;
			}
			set
			{
				_PinID = value;
				MarkColumnModified("PinID");
			}
		}
		decimal? _PinID;

        [Column] 
		public string Image_Title 
		{ 
			get
			{
				return _Image_Title;
			}
			set
			{
				_Image_Title = value;
				MarkColumnModified("Image_Title");
			}
		}
		string _Image_Title;

        [Column] 
		public string BoardName 
		{ 
			get
			{
				return _BoardName;
			}
			set
			{
				_BoardName = value;
				MarkColumnModified("BoardName");
			}
		}
		string _BoardName;

        [Column] 
		public int? UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int? _UserID;

        [Column] 
		public int? BoardUserID 
		{ 
			get
			{
				return _BoardUserID;
			}
			set
			{
				_BoardUserID = value;
				MarkColumnModified("BoardUserID");
			}
		}
		int? _BoardUserID;

        [Column] 
		public int BIMID 
		{ 
			get
			{
				return _BIMID;
			}
			set
			{
				_BIMID = value;
				MarkColumnModified("BIMID");
			}
		}
		int _BIMID;

        [Column] 
		public int? BoardID 
		{ 
			get
			{
				return _BoardID;
			}
			set
			{
				_BoardID = value;
				MarkColumnModified("BoardID");
			}
		}
		int? _BoardID;

        [Column] 
		public string Source 
		{ 
			get
			{
				return _Source;
			}
			set
			{
				_Source = value;
				MarkColumnModified("Source");
			}
		}
		string _Source;

        [Column] 
		public int? Rating 
		{ 
			get
			{
				return _Rating;
			}
			set
			{
				_Rating = value;
				MarkColumnModified("Rating");
			}
		}
		int? _Rating;

	}
    
	[TableName("Points")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Point : DB.Record<Point>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public short Reward_Points 
		{ 
			get
			{
				return _Reward_Points;
			}
			set
			{
				_Reward_Points = value;
				MarkColumnModified("Reward_Points");
			}
		}
		short _Reward_Points;

        [Column] 
		public short Max_Points 
		{ 
			get
			{
				return _Max_Points;
			}
			set
			{
				_Max_Points = value;
				MarkColumnModified("Max_Points");
			}
		}
		short _Max_Points;

        [Column] 
		public string Time_Limit 
		{ 
			get
			{
				return _Time_Limit;
			}
			set
			{
				_Time_Limit = value;
				MarkColumnModified("Time_Limit");
			}
		}
		string _Time_Limit;

	}
    
	[TableName("PointsHistory")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class PointsHistory : DB.Record<PointsHistory>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public int PointsID 
		{ 
			get
			{
				return _PointsID;
			}
			set
			{
				_PointsID = value;
				MarkColumnModified("PointsID");
			}
		}
		int _PointsID;

        [Column] 
		public int UserID 
		{ 
			get
			{
				return _UserID;
			}
			set
			{
				_UserID = value;
				MarkColumnModified("UserID");
			}
		}
		int _UserID;

        [Column] 
		public DateTime Create_Date 
		{ 
			get
			{
				return _Create_Date;
			}
			set
			{
				_Create_Date = value;
				MarkColumnModified("Create_Date");
			}
		}
		DateTime _Create_Date;

	}
    
	[TableName("Articles")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Article : DB.Record<Article>  
    {
        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string RelImagePath 
		{ 
			get
			{
				return _RelImagePath;
			}
			set
			{
				_RelImagePath = value;
				MarkColumnModified("RelImagePath");
			}
		}
		string _RelImagePath;

        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Url 
		{ 
			get
			{
				return _Url;
			}
			set
			{
				_Url = value;
				MarkColumnModified("Url");
			}
		}
		string _Url;

        [Column] 
		public short? Image_Height 
		{ 
			get
			{
				return _Image_Height;
			}
			set
			{
				_Image_Height = value;
				MarkColumnModified("Image_Height");
			}
		}
		short? _Image_Height;

        [Column] 
		public short? Image_Width 
		{ 
			get
			{
				return _Image_Width;
			}
			set
			{
				_Image_Width = value;
				MarkColumnModified("Image_Width");
			}
		}
		short? _Image_Width;

        [Column] 
		public decimal? FNV1a 
		{ 
			get
			{
				return _FNV1a;
			}
			set
			{
				_FNV1a = value;
				MarkColumnModified("FNV1a");
			}
		}
		decimal? _FNV1a;

        [Column] 
		public decimal? MURMUR2 
		{ 
			get
			{
				return _MURMUR2;
			}
			set
			{
				_MURMUR2 = value;
				MarkColumnModified("MURMUR2");
			}
		}
		decimal? _MURMUR2;

        [Column] 
		public decimal? CRC64 
		{ 
			get
			{
				return _CRC64;
			}
			set
			{
				_CRC64 = value;
				MarkColumnModified("CRC64");
			}
		}
		decimal? _CRC64;

        [Column] 
		public string ArticleContent 
		{ 
			get
			{
				return _ArticleContent;
			}
			set
			{
				_ArticleContent = value;
				MarkColumnModified("ArticleContent");
			}
		}
		string _ArticleContent;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Category")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Category : DB.Record<Category>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public int? ParentID 
		{ 
			get
			{
				return _ParentID;
			}
			set
			{
				_ParentID = value;
				MarkColumnModified("ParentID");
			}
		}
		int? _ParentID;

	}
}


