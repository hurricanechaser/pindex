//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_AppUsers_Facebook", "Facebook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.Facebook), "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.AppUsers), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_BoardContributor_AppUsers", "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.AppUsers), "BoardContributor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.BoardContributor), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Boards_AppUsers", "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.AppUsers), "Boards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Boards), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_BoardsImagesMapping_AppUsers", "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.AppUsers), "BoardsImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.BoardsImagesMapping), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Comments_AppUsers", "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.AppUsers), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Comments), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Likes_AppUsers", "AppUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.AppUsers), "Likes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Likes), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_BoardContributor_Boards", "Boards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.Boards), "BoardContributor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.BoardContributor), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Boards_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.Category), "Boards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Boards), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_BoardsImagesMapping_Boards", "Boards", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.Boards), "BoardsImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.BoardsImagesMapping), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_BoardsImagesMapping_Images", "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.Images), "BoardsImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.BoardsImagesMapping), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Comments_BoardsImagesMapping", "BoardsImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.BoardsImagesMapping), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Comments), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Likes_BoardsImagesMapping", "BoardsImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.BoardsImagesMapping), "Likes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.Likes), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_CategoryImagesMapping_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.Category), "CategoryImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.CategoryImagesMapping), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_CategoryImagesMapping_Images", "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.Images), "CategoryImagesMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.CategoryImagesMapping), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_Rating_Images", "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.Images), "Rating", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nails.Nails.edmx.Rating), true)]
[assembly: EdmRelationshipAttribute("NailsProdModel", "FK_UserBatchAssigned_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Nails.Nails.edmx.User), "UserBatchAssigned", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nails.Nails.edmx.UserBatchAssigned), true)]

#endregion

namespace Nails.Nails.edmx
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NailsProdEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NailsProdEntities object using the connection string found in the 'NailsProdEntities' section of the application configuration file.
        /// </summary>
        public NailsProdEntities() : base("name=NailsProdEntities", "NailsProdEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NailsProdEntities object.
        /// </summary>
        public NailsProdEntities(string connectionString) : base(connectionString, "NailsProdEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NailsProdEntities object.
        /// </summary>
        public NailsProdEntities(EntityConnection connection) : base(connection, "NailsProdEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppUsers> AppUsers
        {
            get
            {
                if ((_AppUsers == null))
                {
                    _AppUsers = base.CreateObjectSet<AppUsers>("AppUsers");
                }
                return _AppUsers;
            }
        }
        private ObjectSet<AppUsers> _AppUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Articles> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Articles>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Articles> _Articles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardContributor> BoardContributor
        {
            get
            {
                if ((_BoardContributor == null))
                {
                    _BoardContributor = base.CreateObjectSet<BoardContributor>("BoardContributor");
                }
                return _BoardContributor;
            }
        }
        private ObjectSet<BoardContributor> _BoardContributor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Boards> Boards
        {
            get
            {
                if ((_Boards == null))
                {
                    _Boards = base.CreateObjectSet<Boards>("Boards");
                }
                return _Boards;
            }
        }
        private ObjectSet<Boards> _Boards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardsImagesMapping> BoardsImagesMapping
        {
            get
            {
                if ((_BoardsImagesMapping == null))
                {
                    _BoardsImagesMapping = base.CreateObjectSet<BoardsImagesMapping>("BoardsImagesMapping");
                }
                return _BoardsImagesMapping;
            }
        }
        private ObjectSet<BoardsImagesMapping> _BoardsImagesMapping;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryImagesMapping> CategoryImagesMapping
        {
            get
            {
                if ((_CategoryImagesMapping == null))
                {
                    _CategoryImagesMapping = base.CreateObjectSet<CategoryImagesMapping>("CategoryImagesMapping");
                }
                return _CategoryImagesMapping;
            }
        }
        private ObjectSet<CategoryImagesMapping> _CategoryImagesMapping;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comments> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comments>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comments> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facebook> Facebook
        {
            get
            {
                if ((_Facebook == null))
                {
                    _Facebook = base.CreateObjectSet<Facebook>("Facebook");
                }
                return _Facebook;
            }
        }
        private ObjectSet<Facebook> _Facebook;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Images> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Images>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Images> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Likes> Likes
        {
            get
            {
                if ((_Likes == null))
                {
                    _Likes = base.CreateObjectSet<Likes>("Likes");
                }
                return _Likes;
            }
        }
        private ObjectSet<Likes> _Likes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rating> Rating
        {
            get
            {
                if ((_Rating == null))
                {
                    _Rating = base.CreateObjectSet<Rating>("Rating");
                }
                return _Rating;
            }
        }
        private ObjectSet<Rating> _Rating;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stores> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Stores>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Stores> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBatchAssigned> UserBatchAssigned
        {
            get
            {
                if ((_UserBatchAssigned == null))
                {
                    _UserBatchAssigned = base.CreateObjectSet<UserBatchAssigned>("UserBatchAssigned");
                }
                return _UserBatchAssigned;
            }
        }
        private ObjectSet<UserBatchAssigned> _UserBatchAssigned;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_BoardCategory> vw_BoardCategory
        {
            get
            {
                if ((_vw_BoardCategory == null))
                {
                    _vw_BoardCategory = base.CreateObjectSet<vw_BoardCategory>("vw_BoardCategory");
                }
                return _vw_BoardCategory;
            }
        }
        private ObjectSet<vw_BoardCategory> _vw_BoardCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Cat> vw_Cat
        {
            get
            {
                if ((_vw_Cat == null))
                {
                    _vw_Cat = base.CreateObjectSet<vw_Cat>("vw_Cat");
                }
                return _vw_Cat;
            }
        }
        private ObjectSet<vw_Cat> _vw_Cat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Images> vw_Images
        {
            get
            {
                if ((_vw_Images == null))
                {
                    _vw_Images = base.CreateObjectSet<vw_Images>("vw_Images");
                }
                return _vw_Images;
            }
        }
        private ObjectSet<vw_Images> _vw_Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Images4Tagging> vw_Images4Tagging
        {
            get
            {
                if ((_vw_Images4Tagging == null))
                {
                    _vw_Images4Tagging = base.CreateObjectSet<vw_Images4Tagging>("vw_Images4Tagging");
                }
                return _vw_Images4Tagging;
            }
        }
        private ObjectSet<vw_Images4Tagging> _vw_Images4Tagging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ImagesSNo> vw_ImagesSNo
        {
            get
            {
                if ((_vw_ImagesSNo == null))
                {
                    _vw_ImagesSNo = base.CreateObjectSet<vw_ImagesSNo>("vw_ImagesSNo");
                }
                return _vw_ImagesSNo;
            }
        }
        private ObjectSet<vw_ImagesSNo> _vw_ImagesSNo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ImgCategory> vw_ImgCategory
        {
            get
            {
                if ((_vw_ImgCategory == null))
                {
                    _vw_ImgCategory = base.CreateObjectSet<vw_ImgCategory>("vw_ImgCategory");
                }
                return _vw_ImgCategory;
            }
        }
        private ObjectSet<vw_ImgCategory> _vw_ImgCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_UserComments> vw_UserComments
        {
            get
            {
                if ((_vw_UserComments == null))
                {
                    _vw_UserComments = base.CreateObjectSet<vw_UserComments>("vw_UserComments");
                }
                return _vw_UserComments;
            }
        }
        private ObjectSet<vw_UserComments> _vw_UserComments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppUsers(AppUsers appUsers)
        {
            base.AddObject("AppUsers", appUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Articles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticles(Articles articles)
        {
            base.AddObject("Articles", articles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardContributor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardContributor(BoardContributor boardContributor)
        {
            base.AddObject("BoardContributor", boardContributor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Boards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoards(Boards boards)
        {
            base.AddObject("Boards", boards);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardsImagesMapping EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardsImagesMapping(BoardsImagesMapping boardsImagesMapping)
        {
            base.AddObject("BoardsImagesMapping", boardsImagesMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryImagesMapping EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryImagesMapping(CategoryImagesMapping categoryImagesMapping)
        {
            base.AddObject("CategoryImagesMapping", categoryImagesMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comments comments)
        {
            base.AddObject("Comments", comments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Facebook EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacebook(Facebook facebook)
        {
            base.AddObject("Facebook", facebook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Images images)
        {
            base.AddObject("Images", images);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Likes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLikes(Likes likes)
        {
            base.AddObject("Likes", likes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rating EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRating(Rating rating)
        {
            base.AddObject("Rating", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Stores stores)
        {
            base.AddObject("Stores", stores);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBatchAssigned EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBatchAssigned(UserBatchAssigned userBatchAssigned)
        {
            base.AddObject("UserBatchAssigned", userBatchAssigned);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_BoardCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_BoardCategory(vw_BoardCategory vw_BoardCategory)
        {
            base.AddObject("vw_BoardCategory", vw_BoardCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Cat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Cat(vw_Cat vw_Cat)
        {
            base.AddObject("vw_Cat", vw_Cat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Images(vw_Images vw_Images)
        {
            base.AddObject("vw_Images", vw_Images);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Images4Tagging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Images4Tagging(vw_Images4Tagging vw_Images4Tagging)
        {
            base.AddObject("vw_Images4Tagging", vw_Images4Tagging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ImagesSNo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ImagesSNo(vw_ImagesSNo vw_ImagesSNo)
        {
            base.AddObject("vw_ImagesSNo", vw_ImagesSNo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ImgCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ImgCategory(vw_ImgCategory vw_ImgCategory)
        {
            base.AddObject("vw_ImgCategory", vw_ImgCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_UserComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_UserComments(vw_UserComments vw_UserComments)
        {
            base.AddObject("vw_UserComments", vw_UserComments);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="AppUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppUsers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AppUsers CreateAppUsers(global::System.Int32 id)
        {
            AppUsers appUsers = new AppUsers();
            appUsers.ID = id;
            return appUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Avatar
        {
            get
            {
                return _Avatar;
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.String _Avatar;
        partial void OnAvatarChanging(global::System.String value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Invite
        {
            get
            {
                return _Invite;
            }
            set
            {
                OnInviteChanging(value);
                ReportPropertyChanging("Invite");
                _Invite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Invite");
                OnInviteChanged();
            }
        }
        private global::System.String _Invite;
        partial void OnInviteChanging(global::System.String value);
        partial void OnInviteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> facebookid
        {
            get
            {
                return _facebookid;
            }
            set
            {
                OnfacebookidChanging(value);
                ReportPropertyChanging("facebookid");
                _facebookid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("facebookid");
                OnfacebookidChanged();
            }
        }
        private Nullable<global::System.Decimal> _facebookid;
        partial void OnfacebookidChanging(Nullable<global::System.Decimal> value);
        partial void OnfacebookidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_AppUsers_Facebook", "Facebook")]
        public Facebook Facebook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facebook>("NailsProdModel.FK_AppUsers_Facebook", "Facebook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facebook>("NailsProdModel.FK_AppUsers_Facebook", "Facebook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facebook> FacebookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facebook>("NailsProdModel.FK_AppUsers_Facebook", "Facebook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facebook>("NailsProdModel.FK_AppUsers_Facebook", "Facebook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardContributor_AppUsers", "BoardContributor")]
        public EntityCollection<BoardContributor> BoardContributor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardContributor>("NailsProdModel.FK_BoardContributor_AppUsers", "BoardContributor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardContributor>("NailsProdModel.FK_BoardContributor_AppUsers", "BoardContributor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Boards_AppUsers", "Boards")]
        public EntityCollection<Boards> Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Boards>("NailsProdModel.FK_Boards_AppUsers", "Boards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Boards>("NailsProdModel.FK_Boards_AppUsers", "Boards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_AppUsers", "BoardsImagesMapping")]
        public EntityCollection<BoardsImagesMapping> BoardsImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "BoardsImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "BoardsImagesMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Comments_AppUsers", "Comments")]
        public EntityCollection<Comments> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comments>("NailsProdModel.FK_Comments_AppUsers", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comments>("NailsProdModel.FK_Comments_AppUsers", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Likes_AppUsers", "Likes")]
        public EntityCollection<Likes> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Likes>("NailsProdModel.FK_Likes_AppUsers", "Likes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Likes>("NailsProdModel.FK_Likes_AppUsers", "Likes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Articles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Articles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Articles object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Articles CreateArticles(global::System.Int32 id)
        {
            Articles articles = new Articles();
            articles.ID = id;
            return articles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelImagePath
        {
            get
            {
                return _RelImagePath;
            }
            set
            {
                OnRelImagePathChanging(value);
                ReportPropertyChanging("RelImagePath");
                _RelImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelImagePath");
                OnRelImagePathChanged();
            }
        }
        private global::System.String _RelImagePath;
        partial void OnRelImagePathChanging(global::System.String value);
        partial void OnRelImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Height
        {
            get
            {
                return _Image_Height;
            }
            set
            {
                OnImage_HeightChanging(value);
                ReportPropertyChanging("Image_Height");
                _Image_Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Height");
                OnImage_HeightChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Height;
        partial void OnImage_HeightChanging(Nullable<global::System.Int16> value);
        partial void OnImage_HeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Width
        {
            get
            {
                return _Image_Width;
            }
            set
            {
                OnImage_WidthChanging(value);
                ReportPropertyChanging("Image_Width");
                _Image_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Width");
                OnImage_WidthChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Width;
        partial void OnImage_WidthChanging(Nullable<global::System.Int16> value);
        partial void OnImage_WidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FNV1a
        {
            get
            {
                return _FNV1a;
            }
            set
            {
                OnFNV1aChanging(value);
                ReportPropertyChanging("FNV1a");
                _FNV1a = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FNV1a");
                OnFNV1aChanged();
            }
        }
        private Nullable<global::System.Decimal> _FNV1a;
        partial void OnFNV1aChanging(Nullable<global::System.Decimal> value);
        partial void OnFNV1aChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MURMUR2
        {
            get
            {
                return _MURMUR2;
            }
            set
            {
                OnMURMUR2Changing(value);
                ReportPropertyChanging("MURMUR2");
                _MURMUR2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MURMUR2");
                OnMURMUR2Changed();
            }
        }
        private Nullable<global::System.Decimal> _MURMUR2;
        partial void OnMURMUR2Changing(Nullable<global::System.Decimal> value);
        partial void OnMURMUR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CRC64
        {
            get
            {
                return _CRC64;
            }
            set
            {
                OnCRC64Changing(value);
                ReportPropertyChanging("CRC64");
                _CRC64 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRC64");
                OnCRC64Changed();
            }
        }
        private Nullable<global::System.Decimal> _CRC64;
        partial void OnCRC64Changing(Nullable<global::System.Decimal> value);
        partial void OnCRC64Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArticleContent
        {
            get
            {
                return _ArticleContent;
            }
            set
            {
                OnArticleContentChanging(value);
                ReportPropertyChanging("ArticleContent");
                _ArticleContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArticleContent");
                OnArticleContentChanged();
            }
        }
        private global::System.String _ArticleContent;
        partial void OnArticleContentChanging(global::System.String value);
        partial void OnArticleContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="BoardContributor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardContributor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardContributor object.
        /// </summary>
        /// <param name="boardID">Initial value of the BoardID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contributorID">Initial value of the ContributorID property.</param>
        public static BoardContributor CreateBoardContributor(global::System.Int32 boardID, global::System.Int32 id, global::System.Int32 contributorID)
        {
            BoardContributor boardContributor = new BoardContributor();
            boardContributor.BoardID = boardID;
            boardContributor.ID = id;
            boardContributor.ContributorID = contributorID;
            return boardContributor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardID
        {
            get
            {
                return _BoardID;
            }
            set
            {
                OnBoardIDChanging(value);
                ReportPropertyChanging("BoardID");
                _BoardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardID");
                OnBoardIDChanged();
            }
        }
        private global::System.Int32 _BoardID;
        partial void OnBoardIDChanging(global::System.Int32 value);
        partial void OnBoardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContributorID
        {
            get
            {
                return _ContributorID;
            }
            set
            {
                OnContributorIDChanging(value);
                ReportPropertyChanging("ContributorID");
                _ContributorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContributorID");
                OnContributorIDChanged();
            }
        }
        private global::System.Int32 _ContributorID;
        partial void OnContributorIDChanging(global::System.Int32 value);
        partial void OnContributorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardContributor_AppUsers", "AppUsers")]
        public AppUsers AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardContributor_AppUsers", "AppUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardContributor_AppUsers", "AppUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUsers> AppUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardContributor_AppUsers", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUsers>("NailsProdModel.FK_BoardContributor_AppUsers", "AppUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardContributor_Boards", "Boards")]
        public Boards Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardContributor_Boards", "Boards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardContributor_Boards", "Boards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Boards> BoardsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardContributor_Boards", "Boards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Boards>("NailsProdModel.FK_BoardContributor_Boards", "Boards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Boards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Boards : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Boards object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Boards CreateBoards(global::System.Int32 id)
        {
            Boards boards = new Boards();
            boards.ID = id;
            return boards;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CatID
        {
            get
            {
                return _CatID;
            }
            set
            {
                OnCatIDChanging(value);
                ReportPropertyChanging("CatID");
                _CatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatID");
                OnCatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CatID;
        partial void OnCatIDChanging(Nullable<global::System.Int32> value);
        partial void OnCatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Boards_AppUsers", "AppUsers")]
        public AppUsers AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Boards_AppUsers", "AppUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Boards_AppUsers", "AppUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUsers> AppUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Boards_AppUsers", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUsers>("NailsProdModel.FK_Boards_AppUsers", "AppUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardContributor_Boards", "BoardContributor")]
        public EntityCollection<BoardContributor> BoardContributor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardContributor>("NailsProdModel.FK_BoardContributor_Boards", "BoardContributor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardContributor>("NailsProdModel.FK_BoardContributor_Boards", "BoardContributor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Boards_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_Boards_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_Boards_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_Boards_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("NailsProdModel.FK_Boards_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_Boards", "BoardsImagesMapping")]
        public EntityCollection<BoardsImagesMapping> BoardsImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_Boards", "BoardsImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_Boards", "BoardsImagesMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="BoardsImagesMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardsImagesMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardsImagesMapping object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static BoardsImagesMapping CreateBoardsImagesMapping(global::System.Int32 imageID, global::System.Int32 id)
        {
            BoardsImagesMapping boardsImagesMapping = new BoardsImagesMapping();
            boardsImagesMapping.ImageID = imageID;
            boardsImagesMapping.ID = id;
            return boardsImagesMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoardID
        {
            get
            {
                return _BoardID;
            }
            set
            {
                OnBoardIDChanging(value);
                ReportPropertyChanging("BoardID");
                _BoardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardID");
                OnBoardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BoardID;
        partial void OnBoardIDChanging(Nullable<global::System.Int32> value);
        partial void OnBoardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                OnImageIDChanging(value);
                ReportPropertyChanging("ImageID");
                _ImageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageID");
                OnImageIDChanged();
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image_Title
        {
            get
            {
                return _Image_Title;
            }
            set
            {
                OnImage_TitleChanging(value);
                ReportPropertyChanging("Image_Title");
                _Image_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image_Title");
                OnImage_TitleChanged();
            }
        }
        private global::System.String _Image_Title;
        partial void OnImage_TitleChanging(global::System.String value);
        partial void OnImage_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int32> value);
        partial void OnRatingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_AppUsers", "AppUsers")]
        public AppUsers AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "AppUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "AppUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUsers> AppUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUsers>("NailsProdModel.FK_BoardsImagesMapping_AppUsers", "AppUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_Boards", "Boards")]
        public Boards Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardsImagesMapping_Boards", "Boards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardsImagesMapping_Boards", "Boards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Boards> BoardsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boards>("NailsProdModel.FK_BoardsImagesMapping_Boards", "Boards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Boards>("NailsProdModel.FK_BoardsImagesMapping_Boards", "Boards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_Images", "Images")]
        public Images Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_BoardsImagesMapping_Images", "Images").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_BoardsImagesMapping_Images", "Images").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Images> ImagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_BoardsImagesMapping_Images", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Images>("NailsProdModel.FK_BoardsImagesMapping_Images", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Comments_BoardsImagesMapping", "Comments")]
        public EntityCollection<Comments> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comments>("NailsProdModel.FK_Comments_BoardsImagesMapping", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comments>("NailsProdModel.FK_Comments_BoardsImagesMapping", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Likes_BoardsImagesMapping", "Likes")]
        public EntityCollection<Likes> Likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Likes>("NailsProdModel.FK_Likes_BoardsImagesMapping", "Likes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Likes>("NailsProdModel.FK_Likes_BoardsImagesMapping", "Likes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Category CreateCategory(global::System.Int32 id)
        {
            Category category = new Category();
            category.ID = id;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Boards_Category", "Boards")]
        public EntityCollection<Boards> Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Boards>("NailsProdModel.FK_Boards_Category", "Boards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Boards>("NailsProdModel.FK_Boards_Category", "Boards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_CategoryImagesMapping_Category", "CategoryImagesMapping")]
        public EntityCollection<CategoryImagesMapping> CategoryImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryImagesMapping>("NailsProdModel.FK_CategoryImagesMapping_Category", "CategoryImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryImagesMapping>("NailsProdModel.FK_CategoryImagesMapping_Category", "CategoryImagesMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="CategoryImagesMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryImagesMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryImagesMapping object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static CategoryImagesMapping CreateCategoryImagesMapping(global::System.Int32 categoryID, global::System.Int32 imageID, global::System.Int32 id)
        {
            CategoryImagesMapping categoryImagesMapping = new CategoryImagesMapping();
            categoryImagesMapping.CategoryID = categoryID;
            categoryImagesMapping.ImageID = imageID;
            categoryImagesMapping.ID = id;
            return categoryImagesMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                OnImageIDChanging(value);
                ReportPropertyChanging("ImageID");
                _ImageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageID");
                OnImageIDChanged();
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_CategoryImagesMapping_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_CategoryImagesMapping_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_CategoryImagesMapping_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("NailsProdModel.FK_CategoryImagesMapping_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("NailsProdModel.FK_CategoryImagesMapping_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_CategoryImagesMapping_Images", "Images")]
        public Images Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_CategoryImagesMapping_Images", "Images").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_CategoryImagesMapping_Images", "Images").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Images> ImagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_CategoryImagesMapping_Images", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Images>("NailsProdModel.FK_CategoryImagesMapping_Images", "Images", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Comments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comments object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="boardsImagesMappingID">Initial value of the BoardsImagesMappingID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Comments CreateComments(global::System.Int32 id, global::System.Int32 boardsImagesMappingID, global::System.Int32 userID)
        {
            Comments comments = new Comments();
            comments.ID = id;
            comments.BoardsImagesMappingID = boardsImagesMappingID;
            comments.UserID = userID;
            return comments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments1
        {
            get
            {
                return _Comments1;
            }
            set
            {
                OnComments1Changing(value);
                ReportPropertyChanging("Comments1");
                _Comments1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments1");
                OnComments1Changed();
            }
        }
        private global::System.String _Comments1;
        partial void OnComments1Changing(global::System.String value);
        partial void OnComments1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardsImagesMappingID
        {
            get
            {
                return _BoardsImagesMappingID;
            }
            set
            {
                OnBoardsImagesMappingIDChanging(value);
                ReportPropertyChanging("BoardsImagesMappingID");
                _BoardsImagesMappingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardsImagesMappingID");
                OnBoardsImagesMappingIDChanged();
            }
        }
        private global::System.Int32 _BoardsImagesMappingID;
        partial void OnBoardsImagesMappingIDChanging(global::System.Int32 value);
        partial void OnBoardsImagesMappingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Comments_AppUsers", "AppUsers")]
        public AppUsers AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Comments_AppUsers", "AppUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Comments_AppUsers", "AppUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUsers> AppUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Comments_AppUsers", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUsers>("NailsProdModel.FK_Comments_AppUsers", "AppUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Comments_BoardsImagesMapping", "BoardsImagesMapping")]
        public BoardsImagesMapping BoardsImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Comments_BoardsImagesMapping", "BoardsImagesMapping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Comments_BoardsImagesMapping", "BoardsImagesMapping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoardsImagesMapping> BoardsImagesMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Comments_BoardsImagesMapping", "BoardsImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Comments_BoardsImagesMapping", "BoardsImagesMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Facebook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Facebook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Facebook object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Facebook CreateFacebook(global::System.Decimal id)
        {
            Facebook facebook = new Facebook();
            facebook.id = id;
            return facebook;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Decimal _id;
        partial void OnidChanging(global::System.Decimal value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String link
        {
            get
            {
                return _link;
            }
            set
            {
                OnlinkChanging(value);
                ReportPropertyChanging("link");
                _link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("link");
                OnlinkChanged();
            }
        }
        private global::System.String _link;
        partial void OnlinkChanging(global::System.String value);
        partial void OnlinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String locale
        {
            get
            {
                return _locale;
            }
            set
            {
                OnlocaleChanging(value);
                ReportPropertyChanging("locale");
                _locale = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("locale");
                OnlocaleChanged();
            }
        }
        private global::System.String _locale;
        partial void OnlocaleChanging(global::System.String value);
        partial void OnlocaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> timezone
        {
            get
            {
                return _timezone;
            }
            set
            {
                OntimezoneChanging(value);
                ReportPropertyChanging("timezone");
                _timezone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timezone");
                OntimezoneChanged();
            }
        }
        private Nullable<global::System.Double> _timezone;
        partial void OntimezoneChanging(Nullable<global::System.Double> value);
        partial void OntimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> updated_time
        {
            get
            {
                return _updated_time;
            }
            set
            {
                Onupdated_timeChanging(value);
                ReportPropertyChanging("updated_time");
                _updated_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("updated_time");
                Onupdated_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _updated_time;
        partial void Onupdated_timeChanging(Nullable<global::System.DateTime> value);
        partial void Onupdated_timeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_AppUsers_Facebook", "AppUsers")]
        public EntityCollection<AppUsers> AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppUsers>("NailsProdModel.FK_AppUsers_Facebook", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppUsers>("NailsProdModel.FK_AppUsers_Facebook", "AppUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Images")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Images : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Images object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Images CreateImages(global::System.Int32 id)
        {
            Images images = new Images();
            images.ID = id;
            return images;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Height
        {
            get
            {
                return _Image_Height;
            }
            set
            {
                OnImage_HeightChanging(value);
                ReportPropertyChanging("Image_Height");
                _Image_Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Height");
                OnImage_HeightChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Height;
        partial void OnImage_HeightChanging(Nullable<global::System.Int16> value);
        partial void OnImage_HeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Width
        {
            get
            {
                return _Image_Width;
            }
            set
            {
                OnImage_WidthChanging(value);
                ReportPropertyChanging("Image_Width");
                _Image_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Width");
                OnImage_WidthChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Width;
        partial void OnImage_WidthChanging(Nullable<global::System.Int16> value);
        partial void OnImage_WidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeImage_Path
        {
            get
            {
                return _RelativeImage_Path;
            }
            set
            {
                OnRelativeImage_PathChanging(value);
                ReportPropertyChanging("RelativeImage_Path");
                _RelativeImage_Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeImage_Path");
                OnRelativeImage_PathChanged();
            }
        }
        private global::System.String _RelativeImage_Path;
        partial void OnRelativeImage_PathChanging(global::System.String value);
        partial void OnRelativeImage_PathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tagged
        {
            get
            {
                return _Tagged;
            }
            set
            {
                OnTaggedChanging(value);
                ReportPropertyChanging("Tagged");
                _Tagged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tagged");
                OnTaggedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tagged;
        partial void OnTaggedChanging(Nullable<global::System.Boolean> value);
        partial void OnTaggedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CRC64
        {
            get
            {
                return _CRC64;
            }
            set
            {
                OnCRC64Changing(value);
                ReportPropertyChanging("CRC64");
                _CRC64 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRC64");
                OnCRC64Changed();
            }
        }
        private Nullable<global::System.Decimal> _CRC64;
        partial void OnCRC64Changing(Nullable<global::System.Decimal> value);
        partial void OnCRC64Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FNV1a
        {
            get
            {
                return _FNV1a;
            }
            set
            {
                OnFNV1aChanging(value);
                ReportPropertyChanging("FNV1a");
                _FNV1a = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FNV1a");
                OnFNV1aChanged();
            }
        }
        private Nullable<global::System.Decimal> _FNV1a;
        partial void OnFNV1aChanging(Nullable<global::System.Decimal> value);
        partial void OnFNV1aChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MURMUR2
        {
            get
            {
                return _MURMUR2;
            }
            set
            {
                OnMURMUR2Changing(value);
                ReportPropertyChanging("MURMUR2");
                _MURMUR2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MURMUR2");
                OnMURMUR2Changed();
            }
        }
        private Nullable<global::System.Decimal> _MURMUR2;
        partial void OnMURMUR2Changing(Nullable<global::System.Decimal> value);
        partial void OnMURMUR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Uploaded
        {
            get
            {
                return _Uploaded;
            }
            set
            {
                OnUploadedChanging(value);
                ReportPropertyChanging("Uploaded");
                _Uploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Uploaded");
                OnUploadedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Uploaded;
        partial void OnUploadedChanging(Nullable<global::System.Boolean> value);
        partial void OnUploadedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_BoardsImagesMapping_Images", "BoardsImagesMapping")]
        public EntityCollection<BoardsImagesMapping> BoardsImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_Images", "BoardsImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardsImagesMapping>("NailsProdModel.FK_BoardsImagesMapping_Images", "BoardsImagesMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_CategoryImagesMapping_Images", "CategoryImagesMapping")]
        public EntityCollection<CategoryImagesMapping> CategoryImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryImagesMapping>("NailsProdModel.FK_CategoryImagesMapping_Images", "CategoryImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryImagesMapping>("NailsProdModel.FK_CategoryImagesMapping_Images", "CategoryImagesMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Rating_Images", "Rating")]
        public Rating Rating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("NailsProdModel.FK_Rating_Images", "Rating").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("NailsProdModel.FK_Rating_Images", "Rating").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rating> RatingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rating>("NailsProdModel.FK_Rating_Images", "Rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rating>("NailsProdModel.FK_Rating_Images", "Rating", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Likes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Likes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Likes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="boardsImagesMappingID">Initial value of the BoardsImagesMappingID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Likes CreateLikes(global::System.Int32 id, global::System.Int32 boardsImagesMappingID, global::System.Int32 userID)
        {
            Likes likes = new Likes();
            likes.ID = id;
            likes.BoardsImagesMappingID = boardsImagesMappingID;
            likes.UserID = userID;
            return likes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardsImagesMappingID
        {
            get
            {
                return _BoardsImagesMappingID;
            }
            set
            {
                OnBoardsImagesMappingIDChanging(value);
                ReportPropertyChanging("BoardsImagesMappingID");
                _BoardsImagesMappingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardsImagesMappingID");
                OnBoardsImagesMappingIDChanged();
            }
        }
        private global::System.Int32 _BoardsImagesMappingID;
        partial void OnBoardsImagesMappingIDChanging(global::System.Int32 value);
        partial void OnBoardsImagesMappingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Likes_AppUsers", "AppUsers")]
        public AppUsers AppUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Likes_AppUsers", "AppUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Likes_AppUsers", "AppUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppUsers> AppUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppUsers>("NailsProdModel.FK_Likes_AppUsers", "AppUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppUsers>("NailsProdModel.FK_Likes_AppUsers", "AppUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Likes_BoardsImagesMapping", "BoardsImagesMapping")]
        public BoardsImagesMapping BoardsImagesMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Likes_BoardsImagesMapping", "BoardsImagesMapping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Likes_BoardsImagesMapping", "BoardsImagesMapping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoardsImagesMapping> BoardsImagesMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Likes_BoardsImagesMapping", "BoardsImagesMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoardsImagesMapping>("NailsProdModel.FK_Likes_BoardsImagesMapping", "BoardsImagesMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rating object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        public static Rating CreateRating(global::System.Int32 imageID)
        {
            Rating rating = new Rating();
            rating.ImageID = imageID;
            return rating;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RePins
        {
            get
            {
                return _RePins;
            }
            set
            {
                OnRePinsChanging(value);
                ReportPropertyChanging("RePins");
                _RePins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RePins");
                OnRePinsChanged();
            }
        }
        private Nullable<global::System.Int32> _RePins;
        partial void OnRePinsChanging(Nullable<global::System.Int32> value);
        partial void OnRePinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int32> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int32> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating1
        {
            get
            {
                return _Rating1;
            }
            set
            {
                OnRating1Changing(value);
                ReportPropertyChanging("Rating1");
                _Rating1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating1");
                OnRating1Changed();
            }
        }
        private Nullable<global::System.Int32> _Rating1;
        partial void OnRating1Changing(Nullable<global::System.Int32> value);
        partial void OnRating1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_Rating_Images", "Images")]
        public Images Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_Rating_Images", "Images").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_Rating_Images", "Images").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Images> ImagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Images>("NailsProdModel.FK_Rating_Images", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Images>("NailsProdModel.FK_Rating_Images", "Images", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="Stores")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stores : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stores object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Stores CreateStores(global::System.Int32 id)
        {
            Stores stores = new Stores();
            stores.ID = id;
            return stores;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelImagePath
        {
            get
            {
                return _RelImagePath;
            }
            set
            {
                OnRelImagePathChanging(value);
                ReportPropertyChanging("RelImagePath");
                _RelImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelImagePath");
                OnRelImagePathChanged();
            }
        }
        private global::System.String _RelImagePath;
        partial void OnRelImagePathChanging(global::System.String value);
        partial void OnRelImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Height
        {
            get
            {
                return _Image_Height;
            }
            set
            {
                OnImage_HeightChanging(value);
                ReportPropertyChanging("Image_Height");
                _Image_Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Height");
                OnImage_HeightChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Height;
        partial void OnImage_HeightChanging(Nullable<global::System.Int16> value);
        partial void OnImage_HeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Width
        {
            get
            {
                return _Image_Width;
            }
            set
            {
                OnImage_WidthChanging(value);
                ReportPropertyChanging("Image_Width");
                _Image_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Width");
                OnImage_WidthChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Width;
        partial void OnImage_WidthChanging(Nullable<global::System.Int16> value);
        partial void OnImage_WidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FNV1a
        {
            get
            {
                return _FNV1a;
            }
            set
            {
                OnFNV1aChanging(value);
                ReportPropertyChanging("FNV1a");
                _FNV1a = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FNV1a");
                OnFNV1aChanged();
            }
        }
        private Nullable<global::System.Decimal> _FNV1a;
        partial void OnFNV1aChanging(Nullable<global::System.Decimal> value);
        partial void OnFNV1aChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MURMUR2
        {
            get
            {
                return _MURMUR2;
            }
            set
            {
                OnMURMUR2Changing(value);
                ReportPropertyChanging("MURMUR2");
                _MURMUR2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MURMUR2");
                OnMURMUR2Changed();
            }
        }
        private Nullable<global::System.Decimal> _MURMUR2;
        partial void OnMURMUR2Changing(Nullable<global::System.Decimal> value);
        partial void OnMURMUR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CRC64
        {
            get
            {
                return _CRC64;
            }
            set
            {
                OnCRC64Changing(value);
                ReportPropertyChanging("CRC64");
                _CRC64 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRC64");
                OnCRC64Changed();
            }
        }
        private Nullable<global::System.Decimal> _CRC64;
        partial void OnCRC64Changing(Nullable<global::System.Decimal> value);
        partial void OnCRC64Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.ID = id;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_UserBatchAssigned_User", "UserBatchAssigned")]
        public EntityCollection<UserBatchAssigned> UserBatchAssigned
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBatchAssigned>("NailsProdModel.FK_UserBatchAssigned_User", "UserBatchAssigned");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBatchAssigned>("NailsProdModel.FK_UserBatchAssigned_User", "UserBatchAssigned", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="UserBatchAssigned")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBatchAssigned : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBatchAssigned object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="batchStart">Initial value of the BatchStart property.</param>
        /// <param name="batchEnd">Initial value of the BatchEnd property.</param>
        public static UserBatchAssigned CreateUserBatchAssigned(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 batchStart, global::System.Int32 batchEnd)
        {
            UserBatchAssigned userBatchAssigned = new UserBatchAssigned();
            userBatchAssigned.ID = id;
            userBatchAssigned.UserID = userID;
            userBatchAssigned.BatchStart = batchStart;
            userBatchAssigned.BatchEnd = batchEnd;
            return userBatchAssigned;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchStart
        {
            get
            {
                return _BatchStart;
            }
            set
            {
                OnBatchStartChanging(value);
                ReportPropertyChanging("BatchStart");
                _BatchStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchStart");
                OnBatchStartChanged();
            }
        }
        private global::System.Int32 _BatchStart;
        partial void OnBatchStartChanging(global::System.Int32 value);
        partial void OnBatchStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchEnd
        {
            get
            {
                return _BatchEnd;
            }
            set
            {
                OnBatchEndChanging(value);
                ReportPropertyChanging("BatchEnd");
                _BatchEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchEnd");
                OnBatchEndChanged();
            }
        }
        private global::System.Int32 _BatchEnd;
        partial void OnBatchEndChanging(global::System.Int32 value);
        partial void OnBatchEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NailsProdModel", "FK_UserBatchAssigned_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NailsProdModel.FK_UserBatchAssigned_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NailsProdModel.FK_UserBatchAssigned_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NailsProdModel.FK_UserBatchAssigned_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NailsProdModel.FK_UserBatchAssigned_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_BoardCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_BoardCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_BoardCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static vw_BoardCategory Createvw_BoardCategory(global::System.Int32 id)
        {
            vw_BoardCategory vw_BoardCategory = new vw_BoardCategory();
            vw_BoardCategory.ID = id;
            return vw_BoardCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoardID
        {
            get
            {
                return _BoardID;
            }
            set
            {
                OnBoardIDChanging(value);
                ReportPropertyChanging("BoardID");
                _BoardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardID");
                OnBoardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BoardID;
        partial void OnBoardIDChanging(Nullable<global::System.Int32> value);
        partial void OnBoardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_Cat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Cat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Cat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static vw_Cat Createvw_Cat(global::System.Int32 id, global::System.Int32 categoryID)
        {
            vw_Cat vw_Cat = new vw_Cat();
            vw_Cat.ID = id;
            vw_Cat.CategoryID = categoryID;
            return vw_Cat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_Images")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Images : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Images object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bIMID">Initial value of the BIMID property.</param>
        public static vw_Images Createvw_Images(global::System.Int32 id, global::System.Int32 bIMID)
        {
            vw_Images vw_Images = new vw_Images();
            vw_Images.ID = id;
            vw_Images.BIMID = bIMID;
            return vw_Images;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Height
        {
            get
            {
                return _Image_Height;
            }
            set
            {
                OnImage_HeightChanging(value);
                ReportPropertyChanging("Image_Height");
                _Image_Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Height");
                OnImage_HeightChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Height;
        partial void OnImage_HeightChanging(Nullable<global::System.Int16> value);
        partial void OnImage_HeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Width
        {
            get
            {
                return _Image_Width;
            }
            set
            {
                OnImage_WidthChanging(value);
                ReportPropertyChanging("Image_Width");
                _Image_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Width");
                OnImage_WidthChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Width;
        partial void OnImage_WidthChanging(Nullable<global::System.Int16> value);
        partial void OnImage_WidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeImage_Path
        {
            get
            {
                return _RelativeImage_Path;
            }
            set
            {
                OnRelativeImage_PathChanging(value);
                ReportPropertyChanging("RelativeImage_Path");
                _RelativeImage_Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeImage_Path");
                OnRelativeImage_PathChanged();
            }
        }
        private global::System.String _RelativeImage_Path;
        partial void OnRelativeImage_PathChanging(global::System.String value);
        partial void OnRelativeImage_PathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CRC64
        {
            get
            {
                return _CRC64;
            }
            set
            {
                OnCRC64Changing(value);
                ReportPropertyChanging("CRC64");
                _CRC64 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRC64");
                OnCRC64Changed();
            }
        }
        private Nullable<global::System.Decimal> _CRC64;
        partial void OnCRC64Changing(Nullable<global::System.Decimal> value);
        partial void OnCRC64Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FNV1a
        {
            get
            {
                return _FNV1a;
            }
            set
            {
                OnFNV1aChanging(value);
                ReportPropertyChanging("FNV1a");
                _FNV1a = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FNV1a");
                OnFNV1aChanged();
            }
        }
        private Nullable<global::System.Decimal> _FNV1a;
        partial void OnFNV1aChanging(Nullable<global::System.Decimal> value);
        partial void OnFNV1aChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MURMUR2
        {
            get
            {
                return _MURMUR2;
            }
            set
            {
                OnMURMUR2Changing(value);
                ReportPropertyChanging("MURMUR2");
                _MURMUR2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MURMUR2");
                OnMURMUR2Changed();
            }
        }
        private Nullable<global::System.Decimal> _MURMUR2;
        partial void OnMURMUR2Changing(Nullable<global::System.Decimal> value);
        partial void OnMURMUR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Uploaded
        {
            get
            {
                return _Uploaded;
            }
            set
            {
                OnUploadedChanging(value);
                ReportPropertyChanging("Uploaded");
                _Uploaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Uploaded");
                OnUploadedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Uploaded;
        partial void OnUploadedChanging(Nullable<global::System.Boolean> value);
        partial void OnUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PinID
        {
            get
            {
                return _PinID;
            }
            set
            {
                OnPinIDChanging(value);
                ReportPropertyChanging("PinID");
                _PinID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PinID");
                OnPinIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _PinID;
        partial void OnPinIDChanging(Nullable<global::System.Decimal> value);
        partial void OnPinIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image_Title
        {
            get
            {
                return _Image_Title;
            }
            set
            {
                OnImage_TitleChanging(value);
                ReportPropertyChanging("Image_Title");
                _Image_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image_Title");
                OnImage_TitleChanged();
            }
        }
        private global::System.String _Image_Title;
        partial void OnImage_TitleChanging(global::System.String value);
        partial void OnImage_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BoardName
        {
            get
            {
                return _BoardName;
            }
            set
            {
                OnBoardNameChanging(value);
                ReportPropertyChanging("BoardName");
                _BoardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BoardName");
                OnBoardNameChanged();
            }
        }
        private global::System.String _BoardName;
        partial void OnBoardNameChanging(global::System.String value);
        partial void OnBoardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoardUserID
        {
            get
            {
                return _BoardUserID;
            }
            set
            {
                OnBoardUserIDChanging(value);
                ReportPropertyChanging("BoardUserID");
                _BoardUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardUserID");
                OnBoardUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BoardUserID;
        partial void OnBoardUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnBoardUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BIMID
        {
            get
            {
                return _BIMID;
            }
            set
            {
                if (_BIMID != value)
                {
                    OnBIMIDChanging(value);
                    ReportPropertyChanging("BIMID");
                    _BIMID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BIMID");
                    OnBIMIDChanged();
                }
            }
        }
        private global::System.Int32 _BIMID;
        partial void OnBIMIDChanging(global::System.Int32 value);
        partial void OnBIMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cats
        {
            get
            {
                return _Cats;
            }
            set
            {
                OnCatsChanging(value);
                ReportPropertyChanging("Cats");
                _Cats = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cats");
                OnCatsChanged();
            }
        }
        private global::System.String _Cats;
        partial void OnCatsChanging(global::System.String value);
        partial void OnCatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoardID
        {
            get
            {
                return _BoardID;
            }
            set
            {
                OnBoardIDChanging(value);
                ReportPropertyChanging("BoardID");
                _BoardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardID");
                OnBoardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BoardID;
        partial void OnBoardIDChanging(Nullable<global::System.Int32> value);
        partial void OnBoardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int32> value);
        partial void OnRatingChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_Images4Tagging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Images4Tagging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Images4Tagging object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static vw_Images4Tagging Createvw_Images4Tagging(global::System.Int32 id, global::System.Int32 userID)
        {
            vw_Images4Tagging vw_Images4Tagging = new vw_Images4Tagging();
            vw_Images4Tagging.ID = id;
            vw_Images4Tagging.UserID = userID;
            return vw_Images4Tagging;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeImage_Path
        {
            get
            {
                return _RelativeImage_Path;
            }
            set
            {
                OnRelativeImage_PathChanging(value);
                ReportPropertyChanging("RelativeImage_Path");
                _RelativeImage_Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeImage_Path");
                OnRelativeImage_PathChanged();
            }
        }
        private global::System.String _RelativeImage_Path;
        partial void OnRelativeImage_PathChanging(global::System.String value);
        partial void OnRelativeImage_PathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tagged
        {
            get
            {
                return _Tagged;
            }
            set
            {
                OnTaggedChanging(value);
                ReportPropertyChanging("Tagged");
                _Tagged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tagged");
                OnTaggedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tagged;
        partial void OnTaggedChanging(Nullable<global::System.Boolean> value);
        partial void OnTaggedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CRC64
        {
            get
            {
                return _CRC64;
            }
            set
            {
                OnCRC64Changing(value);
                ReportPropertyChanging("CRC64");
                _CRC64 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRC64");
                OnCRC64Changed();
            }
        }
        private Nullable<global::System.Decimal> _CRC64;
        partial void OnCRC64Changing(Nullable<global::System.Decimal> value);
        partial void OnCRC64Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FNV1a
        {
            get
            {
                return _FNV1a;
            }
            set
            {
                OnFNV1aChanging(value);
                ReportPropertyChanging("FNV1a");
                _FNV1a = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FNV1a");
                OnFNV1aChanged();
            }
        }
        private Nullable<global::System.Decimal> _FNV1a;
        partial void OnFNV1aChanging(Nullable<global::System.Decimal> value);
        partial void OnFNV1aChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MURMUR2
        {
            get
            {
                return _MURMUR2;
            }
            set
            {
                OnMURMUR2Changing(value);
                ReportPropertyChanging("MURMUR2");
                _MURMUR2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MURMUR2");
                OnMURMUR2Changed();
            }
        }
        private Nullable<global::System.Decimal> _MURMUR2;
        partial void OnMURMUR2Changing(Nullable<global::System.Decimal> value);
        partial void OnMURMUR2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Height
        {
            get
            {
                return _Image_Height;
            }
            set
            {
                OnImage_HeightChanging(value);
                ReportPropertyChanging("Image_Height");
                _Image_Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Height");
                OnImage_HeightChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Height;
        partial void OnImage_HeightChanging(Nullable<global::System.Int16> value);
        partial void OnImage_HeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Image_Width
        {
            get
            {
                return _Image_Width;
            }
            set
            {
                OnImage_WidthChanging(value);
                ReportPropertyChanging("Image_Width");
                _Image_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Image_Width");
                OnImage_WidthChanged();
            }
        }
        private Nullable<global::System.Int16> _Image_Width;
        partial void OnImage_WidthChanging(Nullable<global::System.Int16> value);
        partial void OnImage_WidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image_Title
        {
            get
            {
                return _Image_Title;
            }
            set
            {
                OnImage_TitleChanging(value);
                ReportPropertyChanging("Image_Title");
                _Image_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image_Title");
                OnImage_TitleChanged();
            }
        }
        private global::System.String _Image_Title;
        partial void OnImage_TitleChanging(global::System.String value);
        partial void OnImage_TitleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_ImagesSNo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ImagesSNo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ImagesSNo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static vw_ImagesSNo Createvw_ImagesSNo(global::System.Int32 id)
        {
            vw_ImagesSNo vw_ImagesSNo = new vw_ImagesSNo();
            vw_ImagesSNo.ID = id;
            return vw_ImagesSNo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SNo
        {
            get
            {
                return _SNo;
            }
            set
            {
                OnSNoChanging(value);
                ReportPropertyChanging("SNo");
                _SNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SNo");
                OnSNoChanged();
            }
        }
        private Nullable<global::System.Int64> _SNo;
        partial void OnSNoChanging(Nullable<global::System.Int64> value);
        partial void OnSNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeImage_Path
        {
            get
            {
                return _RelativeImage_Path;
            }
            set
            {
                OnRelativeImage_PathChanging(value);
                ReportPropertyChanging("RelativeImage_Path");
                _RelativeImage_Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelativeImage_Path");
                OnRelativeImage_PathChanged();
            }
        }
        private global::System.String _RelativeImage_Path;
        partial void OnRelativeImage_PathChanging(global::System.String value);
        partial void OnRelativeImage_PathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tagged
        {
            get
            {
                return _Tagged;
            }
            set
            {
                OnTaggedChanging(value);
                ReportPropertyChanging("Tagged");
                _Tagged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tagged");
                OnTaggedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tagged;
        partial void OnTaggedChanging(Nullable<global::System.Boolean> value);
        partial void OnTaggedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_ImgCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ImgCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ImgCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static vw_ImgCategory Createvw_ImgCategory(global::System.Int32 id, global::System.Int32 categoryID)
        {
            vw_ImgCategory vw_ImgCategory = new vw_ImgCategory();
            vw_ImgCategory.ID = id;
            vw_ImgCategory.CategoryID = categoryID;
            return vw_ImgCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private global::System.String _Parent;
        partial void OnParentChanging(global::System.String value);
        partial void OnParentChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NailsProdModel", Name="vw_UserComments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_UserComments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_UserComments object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="boardsImagesMappingID">Initial value of the BoardsImagesMappingID property.</param>
        public static vw_UserComments Createvw_UserComments(global::System.Int32 userID, global::System.Int32 boardsImagesMappingID)
        {
            vw_UserComments vw_UserComments = new vw_UserComments();
            vw_UserComments.UserID = userID;
            vw_UserComments.BoardsImagesMappingID = boardsImagesMappingID;
            return vw_UserComments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Avatar
        {
            get
            {
                return _Avatar;
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.String _Avatar;
        partial void OnAvatarChanging(global::System.String value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardsImagesMappingID
        {
            get
            {
                return _BoardsImagesMappingID;
            }
            set
            {
                if (_BoardsImagesMappingID != value)
                {
                    OnBoardsImagesMappingIDChanging(value);
                    ReportPropertyChanging("BoardsImagesMappingID");
                    _BoardsImagesMappingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BoardsImagesMappingID");
                    OnBoardsImagesMappingIDChanged();
                }
            }
        }
        private global::System.Int32 _BoardsImagesMappingID;
        partial void OnBoardsImagesMappingIDChanging(global::System.Int32 value);
        partial void OnBoardsImagesMappingIDChanged();

        #endregion

    
    }

    #endregion

    
}
